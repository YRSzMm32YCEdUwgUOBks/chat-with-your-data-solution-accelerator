# Azure Search for storing the processed documents
AZURE_SEARCH_USE_SEMANTIC_SEARCH=False         # Use semantic search (Azure Search)
AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG=default    # Semantic search config name
AZURE_SEARCH_TOP_K=5                          # Top K results to return
AZURE_SEARCH_ENABLE_IN_DOMAIN=False            # Restrict search to domain
AZURE_SEARCH_FIELDS_ID=id                      # Field for document ID
AZURE_SEARCH_CONTENT_COLUMN=content            # Field for document content
AZURE_SEARCH_CONTENT_VECTOR_COLUMN=content_vector # Field for vector embeddings
AZURE_SEARCH_DIMENSIONS=1536                   # Embedding dimensions
AZURE_SEARCH_FIELDS_TAG=tag                    # Field for tags
AZURE_SEARCH_FIELDS_METADATA=metadata          # Field for metadata
AZURE_SEARCH_FILENAME_COLUMN=filepath          # Field for filename
AZURE_SEARCH_TITLE_COLUMN=title                # Field for title
AZURE_SEARCH_URL_COLUMN=url                    # Field for URL
AZURE_SEARCH_CONVERSATIONS_LOG_INDEX=conversations-log # Index for conversation logs
AZURE_SEARCH_USE_INTEGRATED_VECTORIZATION=false # Use integrated vectorization
AZURE_SEARCH_INDEXER_NAME=                     # (Optional) Azure Search indexer name
AZURE_SEARCH_DATASOURCE_NAME=                  # (Optional) Azure Search datasource name

# Azure OpenAI for generating answers and embeddings
AZURE_OPENAI_RESOURCE=your-azureopenai-resource  # Azure OpenAI resource name
AZURE_OPENAI_ENDPOINT=https://your-azureopenai-resource.openai.azure.com # OpenAI endpoint
AZURE_OPENAI_API_KEY=your-azureopenai-apikey     # OpenAI API key
AZURE_OPENAI_MODEL=gpt-4o-mini                   # (Unused, legacy) Model name
AZURE_OPENAI_MODEL_NAME=gpt-4o-mini              # Model name for completions
AZURE_OPENAI_EMBEDDING_MODEL=text-embedding-3-large # Model name for embeddings
AZURE_OPENAI_TEMPERATURE=0.2                     # Sampling temperature
AZURE_OPENAI_TOP_P=1.0                           # Nucleus sampling parameter
AZURE_OPENAI_MAX_TOKENS=1000                     # Max tokens in response
AZURE_OPENAI_STOP_SEQUENCE=                      # Stop sequence for completions
AZURE_OPENAI_SYSTEM_MESSAGE=You are an AI assistant that helps people find information. # System prompt
AZURE_OPENAI_API_VERSION=2025-01-01-preview      # API version
AZURE_OPENAI_STREAM=True                         # Enable streaming responses

# Backend for processing documents and logging
#BACKEND_URL=http://localhost:7071               # (Legacy, not used in Docker; present in .env)
AzureWebJobsStorage= # not sure yet if only for local or how to point to prod # Azurite connection string (local only)
AZURE_BLOB_ACCOUNT_NAME=                         # Azurite blob account name
AZURE_BLOB_ACCOUNT_KEY=                          # Azurite blob account key
AZURE_BLOB_CONTAINER_NAME=                       # Blob container for documents
DOCUMENT_PROCESSING_QUEUE_NAME= # think not needed after backend is removed # Queue for document processing

# Azure Form Recognizer for extracting text
AZURE_FORM_RECOGNIZER_ENDPOINT=                  # (Optional) Form Recognizer endpoint
AZURE_FORM_RECOGNIZER_KEY=                       # (Optional) Form Recognizer key

# Azure AI Content Safety for filtering
AZURE_CONTENT_SAFETY_ENDPOINT=                   # (Optional) Content Safety endpoint
AZURE_CONTENT_SAFETY_KEY=                        # (Optional) Content Safety key

# Orchestration strategy for chat
ORCHESTRATION_STRATEGY=openai_function           # Orchestration strategy (see docs)

# Prompt Flow (if using prompt_flow strategy)
AZURE_ML_WORKSPACE_NAME=                         # (Optional) ML workspace name
PROMPT_FLOW_DEPLOYMENT_NAME=                     # (Optional) Prompt Flow deployment
PROMPT_FLOW_ENDPOINT_NAME=                       # (Optional) Prompt Flow endpoint

# Speech-to-text feature
AZURE_SPEECH_SERVICE_KEY=                        # (Optional) Speech service key
AZURE_SPEECH_SERVICE_REGION=                     # (Optional) Speech service region

# Auth type environment variables
AZURE_AUTH_TYPE=keys                             # Auth type: keys or rbac
USE_KEY_VAULT=true                               # Use Key Vault for secrets
AZURE_KEY_VAULT_ENDPOINT=                        # (Optional) Key Vault endpoint

# Chat conversation type
CONVERSATION_FLOW=                               # (Optional) Custom/BYOD conversation flow

# Chat History, Document Chunk, and Vector Store
DATABASE_TYPE=PostgreSQL                         # Database type
AZURE_POSTGRESQL_HOST_NAME=                      # (Optional) Azure Postgres host (cloud only)
AZURE_POSTGRESQL_DATABASE_NAME=                  # (Optional) Azure Postgres DB (cloud only)
AZURE_POSTGRESQL_USER=                           # (Optional) Azure Postgres user (cloud only)

# Local PostgreSQL settings
POSTGRESQL_HOST=localhost                        # Local Postgres host
POSTGRESQL_DB=postgres                           # Local Postgres DB name
POSTGRESQL_USER=postgres                         # Local Postgres user
POSTGRESQL_PASSWORD=postgres                     # Local Postgres password

AZURE_AUTH_ENABLED=false                         # Disable Azure auth for local dev
LOAD_CONFIG_FROM_BLOB_STORAGE=false              # Load config from blob (cloud only)
APPLICATIONINSIGHTS_ENABLED=false                # Disable App Insights for local dev
#LOGLEVEL=DEBUG                                  # (Optional) Log level

# Vite frontend API base URL
# VITE_BACKEND_URL=http://azure_function:80      # (Docker internal)
# Local development in docker map to localhost instead of container name
VITE_BACKEND_URL=http://localhost:8088           # Localhost for frontend API

CHAT_HISTORY_ENABLED=true                        # Enable chat history

# MISSING FROM .env (present in .env only):
# BACKEND_URL
